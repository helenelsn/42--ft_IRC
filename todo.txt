
A faire :
    - checker que les signaux sont bien geres 
    - remplacer macro dynamique userID par méthode de la classe client (modifier autres macros en conséquence)
    - implementer classe Channel
    - finir d'implementer NICK, QUIT (doit informer les autres membres des channels dans lesquels sont le client)
    - Implementer commandes restantes 
        -> basic commands : JOIN, PART, PRIVMSG (channel et user)
        -> commands specific to channel ops : KICK, INVITE, TOPIC, MODE
    - checker cas speciaux, et si ils sont geres correctement (password is an empty string, ...)
    - checker ReadData pour un msg plus long que BUFSIZ -> normalement ca tronc le msg mais y a bien un \r\n a la fin 



---------------------------------------------------

QUIT :
    Quand on client envoie la commande QUIT, il faut attendre d'avoir send() a ce meme client le RPL du serveur
        avant de remove ce client du serveur (ie attendre le prochain poll() : c'est dans la gestion
        de POLLOUT que l'on remove le client du serveur).
    Distribuer le msg QUIT a tous les clients ayant des channels en commun avec le client déconnecté
    Si s'agit d'une déconnection non volontaire, ie résultant d'un retour d'erreur ou d'un signal, 
        doit renseigner la raison dans le QUIT msg 

NICK :
    Informer tous les clients ayant des channels ne commun avec le client ayant changé son nick que 
        ce dernier l'a changé, sauf si cette commande est tapée pendant la registration
    Checker le comportement attendu si il n'y a pas de previous nickname 






---------------------------------------------------



-   Signals must be handled (ctrl+C, ctrl+D, what else ?)
-   Create a Channel class

-   You must be able to authenticate, set a nickname, a username, join a channel,
    send and receive private messages using your reference client.
-   All the messages sent from one client to a channel have to be forwarded to
    every other client that joined the channel.
-   You must have operators and regular users : 
    -> both should inherit from a base class (or is 'regular user' the base class 'operator' would inherit from ?)
-   You have to implement the commands that are specific to channel operators
    -> KICK, INVITE, TOPIC, MODE



---------------------------------------------------


Checks a faire :
    - vérifier ce qu'est le 'client' dans les server rpl et error responses (user_id ? et pas juste nickname)
    - vérifier les caractères autorisés pour le nickname (commence par un caractère alphabétique, 
        puis des caractères alphabétiques ou numériques, pour un total de 9 caractères max ?)
    - vérifier si prend en compte les potentiels espaces supplémentaires autour de la commande et des parametres 
        (ie si " JOIN" equivaut a "JOIN", et que doit skip les ' ' nous meme), ou si c'est une commande inconnue